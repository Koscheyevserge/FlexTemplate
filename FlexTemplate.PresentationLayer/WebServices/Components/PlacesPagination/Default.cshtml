@model FlexTemplate.PresentationLayer.WebServices.Components.PlacesPagination.ViewModel
<div class="pagination-wrapper">
    <div class="GridLex-grid-middle GridLex-grid-noGutter">
        <div class="GridLex-col-6_sm-12_xs-12">
            <div class="text-right text-center-sm mb-10-sm">Showing 1 to 24 from @Model.PlacesCount restaurants </div>
        </div>
        <div class="GridLex-col-6_sm-12_xs-12">
            <nav>
                <ul class="places-pagination pagination pagination-text-center-sm mb-5-xs">
                    @if (Model.HasPreviousPage)
                    {
                        <li><a href="@Url.Action("Places", "Home", new { listType = Model.ListType, categories = Model.Categories, cities = Model.Cities, input = Model.Input, currentPage = Model.CurrentPage - 1, isDescending = Model.IsDescending, orderBy = Model.OrderBy })" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>
                    }
                    @for (var i = 1; i <= Model.Pages; i++)
                    {
                        <li class="@(Model.CurrentPage == i ? "active" : string.Empty)"><a href="@Url.Action("Places", "Home", new { listType = Model.ListType, categories = Model.Categories, cities = Model.Cities, input = Model.Input, currentPage = i, isDescending = Model.IsDescending, orderBy = Model.OrderBy })">@i</a></li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li><a href="@Url.Action("Places", "Home", new { listType = Model.ListType, categories = Model.Categories, cities = Model.Cities, input = Model.Input, currentPage = Model.CurrentPage + 1, isDescending = Model.IsDescending, orderBy = Model.OrderBy })" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>
                    }
                </ul>
            </nav>

        </div>
    </div>

</div>