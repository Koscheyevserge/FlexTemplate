@using System.Collections
@using System.Linq
@using FlexTemplate.Entities
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model FlexTemplate.ViewModels.HomeController.ThisPlacesListViewModel
@{
    object buffer;
    if (!ViewBag.Query.TryGetValue("categories", out buffer))
    {
        buffer = null;
    }
    IEnumerable<string> categories = new List<string>();
    if (buffer is IEnumerable)
    {
        categories = buffer as IEnumerable<string>;
    }
    IEnumerable<string> cities = new List<string>();
    if (!ViewBag.Query.TryGetValue("cities", out buffer))
    {
        buffer = null;
    }
    if (buffer is IEnumerable)
    {
        cities = buffer as IEnumerable<string>;
    }
    var listType = "list";
    if (!ViewBag.Query.TryGetValue("listType", out buffer))
    {
        buffer = null;
    }
    if (buffer is IEnumerable)
    {
        listType = ((IEnumerable<string>)buffer).FirstOrDefault();
    }
    string orderBy = null;
    if (!ViewBag.Query.TryGetValue("orderBy", out buffer))
    {
        buffer = null;
    }
    if (buffer is IEnumerable)
    {
        orderBy = ((IEnumerable<string>)buffer).FirstOrDefault();
    }
    var isDescending = false;
    if (!ViewBag.Query.TryGetValue("isDescending", out buffer))
    {
        buffer = null;
    }
    if (buffer is IEnumerable)
    {
        var isDescendingStr = ((IEnumerable<string>)buffer).FirstOrDefault();
        bool.TryParse(isDescendingStr, out isDescending);
    }
    string input = null;
    if (!ViewBag.Query.TryGetValue("input", out buffer))
    {
        buffer = null;
    }
    if (buffer is IEnumerable)
    {
        input = ((IEnumerable<string>)buffer).FirstOrDefault();
        input = string.IsNullOrEmpty(input) ? null : input;
    }
}
<div class="restaurant-grid-wrapper mb-30">

    <div class="GridLex-gap-30">

        <div class="GridLex-grid-noGutter-equalHeight">
            @foreach (Place place in Model.Places)
            {
                <div class="GridLex-col-4_sm-6_xs-6_xss-12">

                    <div class="restaurant-grid-item">
                        <a asp-controller="Home" asp-action="Place" asp-route-id="@place.Id">
                            <div class="image">
                                <img src="../../Resources/Places/@place.Id/head.jpg" alt="Image" onerror="this.onerror = null; this.src = '../../Resources/Defaults/place.jpg';" />
                            </div>
                        </a>
                        <div class="content">
                            <a asp-controller="Home" asp-action="Place" asp-route-id="@place.Id">
                                <h5>@place.Name</h5>
                            </a>
                            <p class="location">
                                <i class="fa fa-map-marker"></i> @place.Address @place.Street?.Name, @place.Street?.City?.Name
                            </p>
                            <div class="rating-wrapper">
                                <div class="rating-item">
                                    <input type="hidden" class="rating" data-filled="oi oi-star" data-empty="oi oi-star" data-fractions="2" data-readonly value="3.5" />
                                </div>
                                <span class="texting"> (@place.Reviews.Count відгуків)</span>
                            </div>
                            <p class="cuisine">
                                Кухня:
                                @foreach (Category category in place.PlaceCategories.Select(pc => pc?.Category))
                                {
                                    <span><a asp-controller="Home" asp-action="Places" asp-route-listtype="grid" asp-route-categories="@category.Id">@category.Name</a></span>
                                }
                            </p>
                        </div>

                    </div>

                </div>
            }

        </div>

    </div>

</div>

<div class="pagination-wrapper">
    <input id="currentPage" type="hidden" name="currentPage" value="" />
    <div class="GridLex-grid-middle GridLex-grid-noGutter">
        <div class="GridLex-col-6_sm-12_xs-12">
            <div class="text-right text-center-sm mb-10-sm">Showing 1 to 24 from 253 restaurants </div>
        </div>
        <div class="GridLex-col-6_sm-12_xs-12">
            <nav>
                <ul class="places-pagination pagination pagination-text-center-sm mb-5-xs">
                    @if (Model.CurrentPage > 1)
                    {
                        <li><a href="@Url.Action("Places", "Home", new { listType = listType, categories = categories, cities = cities, input = input, currentPage = Model.CurrentPage - 1, isDescending = isDescending, orderBy = orderBy})" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>
                    }
                    @for (var i = 1; i <= Model.Pages; i++)
                    {
                        <li class="@(Model.CurrentPage == i ? "active" : string.Empty)"><a href="@Url.Action("Places", "Home", new { listType = listType, categories = categories, cities = cities, input = input, currentPage = i, isDescending = isDescending, orderBy = orderBy})">@i</a></li>
                    }
                    @if (Model.CurrentPage < Model.Pages)
                    {
                        <li><a href="@Url.Action("Places", "Home", new { listType = listType, categories = categories, cities = cities, input = input, currentPage = Model.CurrentPage + 1, isDescending = isDescending, orderBy = orderBy})" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>
                    }
                </ul>
            </nav>

        </div>
    </div>

</div>