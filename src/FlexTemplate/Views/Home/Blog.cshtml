@using FlexTemplate.Entities
@model FlexTemplate.ViewModels.HomeController.HomeBlogViewModel
<!-- start Main Wrapper -->
<div class="main-wrapper scrollspy-container">

    <!-- start hero-header -->
    <div class="hero hero-breadcrumb" style="background-image: url('../../resources/blogs/@Model.Blog.Id/banner.jpg');">

        <div class="container">
                        
        </div>

    </div>

    <div class="container pt-10 pb-60">

        <div class="breadcrumb-wrapper">
            <ol class="breadcrumb">
                <li><a asp-controller="Home" asp-action="Blogs">Блоги</a></li>
                <li class="active">@Model.Blog.Caption</li>
            </ol>
        </div>

        <div class="mt-40">

            <div class="row">

                <div class="col-sm-8 col-md-9 col-xs-12 mb-50-xs">

                    <div class="blog-single-wrapper">

                        <div class="heading">

                            <h3>@Model.Blog.Caption</h3>
                            
                            <div class="meta clearfix">
                                <div class="date-posted">@Model.Blog.CreatedOn</div>
                                <div>by: @(Model.Blog.Author == null ? string.Empty : $"{Model.Blog.Author.Name} {Model.Blog.Author.Surname}")</div>
                                <div>in: Review Trip</div>                                
                            </div>
                            @if (Model.IsAuthor)
                            {
                            <span class="btn-holder">
                                <a asp-controller="Home" asp-action="EditBlog" asp-route-id="@Model.Blog.Id" class="btn btn-primary anchor-alt">Правити статтю</a>
                            </span>
                            }
                        </div>
                        <div class="content blog-entry">
                            <p>@Html.Raw(Model.Blog.Preamble)</p>
                            <img src="../../Resources/Blogs/@(Model.Blog.Id)/head.jpg" alt="image" onerror="this.onerror = null; this.src = '../../Resources/Defaults/blog.jpg';" />
                            <p>@Html.Raw(Model.Blog.Text)</p>
                        </div>

                        <div class="blog-extra">
                            <div class="row">
                                <div class="col-xs-12 col-sm-6 col-md-7 xs-mb">
                                    <div class="tag-cloud clearfix mt-0">
                                        <span><i class="fa fa-tags"></i> Теги: </span>
                                        @foreach (Tag tag in Model.Blog.BlogTags.Select(t => t.Tag))
                                        {
                                            <a href="#" class="tag-item">@tag.Name</a>
                                        }
                                    </div>
                                </div>

                                @*<div class="col-xs-12 col-sm-6 col-md-5 xs-mb">
                                        <ul class="social-share-sm mt-5 pull-right pull-left-xs mt-20-xs">

                                            <li><span><i class="fa fa-share-square"></i> share</span></li>
                                            <li class="the-label"><a href="#">Facebook</a></li>
                                            <li class="the-label"><a href="#">Twitter</a></li>
                                            <li class="the-label"><a href="#">Google Plus</a></li>

                                        </ul>
                                    </div>
                                    <div class="clear"></div>*@
                            </div>
                        </div>

                        <h4>Автор</h4>
                        <div class="blog-author clearfix">
                            <div class="author-label">
                                <img src="@(Model.Blog.Author == null ? "../../Resources/Defaults/user.jpg" : $"../../Resources/Users/{Model.Blog.Author.Id}.jpg" )" alt="@(Model.Blog.Author == null ? string.Empty : $"{Model.Blog.Author.Name} {Model.Blog.Author.Surname}")" onerror="this.onerror = null; this.src = '../../Resources/Defaults/user.jpg';" />
                            </div>
                            <div class="author-details">
                                <h6><a class="inverse">@(Model.Blog.Author == null ? string.Empty : $"{Model.Blog.Author.Name} {Model.Blog.Author.Surname}")</a></h6>
                                @*
                                    <p>Prepared do an dissuade be so whatever steepest. Yet her beyond looked either day wished nay. By doubtful disposed do juvenile an. Now curiosity you explained immediate why behaviour. An dispatched impossible of of melancholy favourable. </p>
                                    <div class="social">
                                        <a href="#" class="bottomtip" title="Twitter"><i class="fa fa-twitter"></i></a>
                                        <a href="#" class="bottomtip" title="Facebook"><i class="fa fa-facebook"></i></a>
                                        <a href="#" class="bottomtip" title="Dribbble"><i class="fa fa-dribbble"></i></a>
                                        <a href="#" class="bottomtip" title="Youtube"><i class="fa fa-youtube"></i></a>
                                        <a href="#" class="bottomtip" title="RSS"><i class="fa fa-rss"></i></a>
                                    </div>
                                *@
                            </div>

                        </div>

                    </div>

                    <div class="clear mb-40"></div>

                    <h4>@Model.Comments.Count() Комментарів</h4>
                    
                    @await Component.InvokeAsync("BlogComments", new {item = Model.Comments})
                    
                    <!-- End Comment -->

                    <div class="clear mb-40"></div>

                    <h4>Додати комментар</h4>

                    <form method="post" id="contactForm" asp-controller="Home" asp-action="NewBlogComment" asp-route-blogid="@Model.Blog.Id" class="comment-form">
                        @*<div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group">
                                    <label for="comment-name">Ваше ім'я <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="comment-name">
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group">
                                    <label for="comment-email">Ваш Email <span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="comment-email">
                                </div>
                            </div>
                        </div>*@
                        <div class="clear"></div>
                        <div class="row">
                            <div class="col-md-12 mb-20">
                                <div class="form-group">
                                    <label for="comment-message">Комментар</label>
                                    <textarea name="text" id="comment-message" class="form-control" rows="4"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-primary">Відправити</button>
                            </div>
                        </div>
                    </form>
                </div>
                @await Component.InvokeAsync("BlogsFeed")
            </div>

        </div>

    </div>

</div>
<!-- end Main Wrapper -->