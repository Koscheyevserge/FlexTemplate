@using System.Linq
@using FlexTemplate.Entities
@model FlexTemplate.ViewModels.HomeController.HomeBlogsViewModel
<!-- start Main Wrapper -->
<div class="main-wrapper scrollspy-container">

    <!-- start hero-header -->
    <div class="hero hero-breadcrumb" style="background-image:url('../../images/hero-header/02.jpg');">

        <div class="container">

            <h1>Блог</h1>

        </div>

    </div>

    <div class="container pt-10 pb-60">

        <div class="breadcrumb-wrapper">
            <ol class="breadcrumb">
                <li><a href="#">Головна</a></li>
                <li class="active">Блог</li>
            </ol>
        </div>

        <div class="mt-40">

            <div class="row">

                <div class="col-sm-8 col-md-9 col-xs-12 mb-50-xs">

                    <div class="recent-post-wrapper">

                        <div class="GridLex-gap-30">

                            <div class="GridLex-grid-noGutter-equalHeight">

                                @foreach (Blog blog in Model.Blogs)
                                {


                                <div class="GridLex-col-6_sm-12_xs-12_xss-12">

                                    <div class="recent-post-item mb-40">

                                        <div class="image">

                                            <div class="overlay-box">

                                                <a asp-controller="Home" asp-action="Blog" asp-route-id="@blog.Id">
                                                    <img src="../../Resources/Blogs/@(blog.Id)/head.jpg" alt="image" onerror="this.onerror = null; this.src = '../../Resources/Defaults/blog.jpg';"/>
                                                    <div class="image-overlay">
                                                        <div class="overlay-content">
                                                            <div class="overlay-icon"><i class="pe-7s-link"></i></div>
                                                        </div>
                                                    </div>
                                                </a>

                                            </div>

                                            <div class="recent-post-meta clearfix">
                                                <div class="date-posted">@blog.CreatedOn</div>
                                                <div>by: @(blog.Author != null ? $"{blog.Author.Name} {blog.Author.Surname}" : string.Empty)</div>
                                                <div>in: Review Trip</div>
                                            </div>

                                        </div>

                                        <div class="content">

                                            <h4><a asp-controller="Home" asp-action="Blog" asp-route-id="@blog.Id">@blog.Caption</a></h4>
                                            <p class="recent-post-entry">@blog.Preamble</p>

                                            <a asp-controller="Home" asp-action="Blog" asp-route-id="@blog.Id" class="btn btn-primary btn-inverse btn-sm">Read more <i class="fa fa-long-arrow-right"></i></a>

                                        </div>

                                    </div>

                                </div>

                                }

                            </div>

                        </div>

                        <div class="pagination-wrapper mt-40 mb-0">
                            <div class="GridLex-grid-middle GridLex-grid-noGutter">
                                <div class="GridLex-col GridLex-col-12_sm-12_xs-12 pb-0">

                                    <nav>
                                        <ul class="blogs-pagination pagination pagination-text-center-sm mb-5-xs">
                                            @if (Model.CurrentPage > 1)
                                            {
                                                <li><a data-id="@(Model.CurrentPage - 1)" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>
                                            }
                                            @for (var i = 1; i <= Model.Pages; i++)
                                            {
                                                <li class="@(Model.CurrentPage == i ? "active" : string.Empty)"><a data-id="@i">@i</a></li>
                                            }
                                            @if (Model.CurrentPage < Model.Pages)
                                            {
                                                <li><a data-id="@(Model.CurrentPage + 1)" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>
                                            }
                                        </ul>
                                    </nav>

                                </div>

                            </div>

                        </div>

                    </div>

                </div>

                @await Component.InvokeAsync("BlogsFeed", new { exceptBlogs = Model.Blogs })

                </div>

            </div>

        </div>

    </div>
    <!-- end Main Wrapper -->