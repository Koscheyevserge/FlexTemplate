@model FlexTemplate.ViewModels.HomeController.HomePlacesViewModel
<!-- start Main Wrapper -->
<div class="main-wrapper scrollspy-container">
    <form asp-action="Places">
        <!-- start hero-header -->
        <div class="hero hero-sm" style="background-image:url('../../images/hero-header/02.jpg');">
            <div class="container">

                <div class="home-search-form">

                    <div class="form-group location-form">
                        <input name="input" type="text" class="form-control" placeholder="@Model.Input">
                    </div>

                    <button class="btn btn-primary btn-form">Знайти</button>

                </div>

            </div>

        </div>
        <!-- end hero-header -->

        <div class="container pt-10 pb-30">

            <div class="breadcrumb-wrapper">
                <ol class="breadcrumb">
                    <li><a href="@Url.Action("Index", "Home")">Головна</a></li>
                    <li><a href="@Url.Action("Places", "Home")" class="active">Ресторани</a></li>
                </ol>
            </div>

            <div class="row mb-10">

                <div class="col-md-8">

                    <div class="section-title-02">

                        <h3><span>Ресторани<small class="ml-10">/ 253 ресторанів</small></span></h3>

                    </div>

                </div>

            </div>

            <div class="row">
                @await Component.InvokeAsync("ThisPlacesFilters", new { cities = Model.Cities, input = Model.Input, categories = Model.Categories })
                <div class="col-sm-8 col-md-9">
                    <div class="sort-by-wrapper clearfix">

                        <div class="row gap-5">

                            <div class="col-sm-10">

                                <div class="text-holder bg-primary">Sort By:</div>
                                <input id="orderBy" type="hidden" name="orderBy">
                                <input id="isDescending" type="hidden" name="isDescending">
                                <ul class="sort-by">
                                    <li>
                                        <button id="nameOrderBy" class="btn @(Model.OrderBy == "name" ? "active" : string.Empty)">Назва @Html.Raw(Model.OrderBy == "name" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                    </li>
                                    <li>
                                        <button id="ratingOrderBy" class="btn @(Model.OrderBy == "rating" ? "active" : string.Empty)">Рейтинг @Html.Raw(Model.OrderBy == "rating" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                    </li>
                                    <li>
                                        <button id="priceOrderBy" class="btn @(Model.OrderBy == "price" ? "active" : string.Empty)">Ціна @Html.Raw(Model.OrderBy == "price" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                    </li>
                                    <li>
                                        <button id="categoryOrderBy" class="btn @(Model.OrderBy == "category" ? "active" : string.Empty)">Кухня @Html.Raw(Model.OrderBy == "category" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                    </li>
                                    <li>
                                        <button id="cityOrderBy" class="btn @(Model.OrderBy == "city" ? "active" : string.Empty)">Місто @Html.Raw(Model.OrderBy == "city" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                    </li>
                                </ul>

                            </div>

                            <div class="col-sm-2">
                                <input id="listType" type="hidden" name="listType" value="@Model.ListType.ToLower()" />
                                <ul class="layout-option">
                                    <li class='change-to-grid btn @(Model.ListType.ToLower() == "grid" ? "active" : string.Empty)'><a><i class="ti-view-grid"></i></a></li>
                                    <li class='change-to-list btn @(Model.ListType.ToLower() != "grid" ? "active" : string.Empty)'><a><i class="ti-view-list-alt"></i></a></li>
                                </ul>

                            </div>

                        </div>



                    </div>
                    @await Component.InvokeAsync("ThisPlacesList", new {cities = Model.Cities, input = Model.Input, categories = Model.Categories, currentPage = Model.CurrentPage, listType = Model.ListType, orderBy = Model.OrderBy, isDescending = Model.IsDescending})
                </div>
            </div>

        </div>
    </form>
</div>
<!-- end Main Wrapper -->