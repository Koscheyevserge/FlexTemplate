@using System.Collections
@using System.ComponentModel
@using System.Security.Policy
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model FlexTemplate.ViewModels.HomeController.HomePlacesViewModel
@{
    object buffer;
    if (!ViewBag.Query.TryGetValue("categories", out buffer))
    {
        buffer = null;
    }
    IEnumerable<string> categories = new List<string>();
    if (buffer is IEnumerable)
    {
        categories = buffer as IEnumerable<string>;
    }
    IEnumerable<string> cities = new List<string>();
    if (!ViewBag.Query.TryGetValue("cities", out buffer))
    {
        buffer = null;
    }
    if (buffer is IEnumerable)
    {
        cities = buffer as IEnumerable<string>;
    }
    var listType = "list";
    if (!ViewBag.Query.TryGetValue("listType", out buffer))
    {
        buffer = null;
    }
    if (buffer is IEnumerable)
    {
        listType = ((IEnumerable<string>) buffer).FirstOrDefault();
    }
}
<!-- start Main Wrapper -->
<div class="main-wrapper scrollspy-container">
    <!-- start hero-header -->
    <div class="hero hero-sm" style="background-image:url('../../images/hero-header/02.jpg');">
        <div class="container">

            <div class="home-search-form">
                <form asp-controller="Home" asp-action="Places" method="GET">
                    <div class="form-group location-form">
                        <input name="input" type="text" class="form-control" value="@Model.Input">
                    </div>
                    <button onclick="this.form.submit()" class="btn btn-primary btn-form">Знайти</button>
                </form>
            </div>

        </div>

    </div>
    <!-- end hero-header -->

    <div class="container pt-10 pb-30">

        <div class="breadcrumb-wrapper">
            <ol class="breadcrumb">
                <li><a href="@Url.Action("Index", "Home")">Головна</a></li>
                <li><a href="@Url.Action("Places", "Home")" class="active">Ресторани</a></li>
            </ol>
        </div>

        <div class="row mb-10">

            <div class="col-md-8">

                <div class="section-title-02">

                    <h3><span>Ресторани<small class="ml-10">/ 253 ресторанів</small></span></h3>

                </div>

            </div>

        </div>

        <div class="row">
            @await Component.InvokeAsync("ThisPlacesFilters", new { cities = Model.Cities, input = Model.Input, categories = Model.Categories })
            <div class="col-sm-8 col-md-9">
                <div class="sort-by-wrapper clearfix">

                    <div class="row gap-5">

                        <div class="col-sm-10">

                            <div class="text-holder bg-primary">Sort By:</div>
                            <ul class="sort-by">
                                <li>
                                    <button onclick="window.location.href = '@Url.Action("Places", "Home", new { listType = listType, categories = categories, cities = cities, input = Model.Input, orderBy = "name", isDescending = Model.OrderBy == "name" ? !Model.IsDescending : false })'" class="btn @(Model.OrderBy == "name" ? "active" : string.Empty)">Назва @Html.Raw(Model.OrderBy == "name" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                </li>
                                <li>
                                    <button onclick="window.location.href = '@Url.Action("Places", "Home", new { listType = listType, categories = categories, cities = cities, input = Model.Input, orderBy = "rating", isDescending = Model.OrderBy == "rating" ? !Model.IsDescending : false })'" class="btn @(Model.OrderBy == "rating" ? "active" : string.Empty)">Рейтинг @Html.Raw(Model.OrderBy == "rating" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                </li>
                                <li>
                                    <button onclick="window.location.href = '@Url.Action("Places", "Home", new { listType = listType, categories = categories, cities = cities, input = Model.Input, orderBy = "price", isDescending = Model.OrderBy == "price" ? !Model.IsDescending : false })'" class="btn @(Model.OrderBy == "price" ? "active" : string.Empty)">Ціна @Html.Raw(Model.OrderBy == "price" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                </li>
                                <li>
                                    <button onclick="window.location.href = '@Url.Action("Places", "Home", new { listType = listType, categories = categories, cities = cities, input = Model.Input, orderBy = "category", isDescending = Model.OrderBy == "category" ? !Model.IsDescending : false })'" class="btn @(Model.OrderBy == "category" ? "active" : string.Empty)">Кухня @Html.Raw(Model.OrderBy == "category" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                </li>
                                <li>
                                    <button onclick="window.location.href = '@Url.Action("Places", "Home", new { listType = listType, categories = categories, cities = cities, input = Model.Input, orderBy = "city", isDescending = Model.OrderBy == "city" ? !Model.IsDescending : false })'" class="btn @(Model.OrderBy == "city" ? "active" : string.Empty)">Місто @Html.Raw(Model.OrderBy == "city" ? Model.IsDescending ? "<i class='ti-angle-up'></i>" : "<i class='ti-angle-down'></i>" : string.Empty)</button>
                                </li>
                            </ul>

                        </div>

                        <div class="col-sm-2">
                            <ul class="layout-option">
                                <li class='btn @(listType.ToLower() == "grid" ? "active" : string.Empty)'><a href="@Url.Action("Places", "Home", new { listType = "grid", categories = categories, cities = cities, input = Model.Input })"><i class="ti-view-grid"></i></a></li>
                                <li class='btn @(listType.ToLower() != "grid" ? "active" : string.Empty)'><a href="@Url.Action("Places", "Home", new { listType = "list", categories = categories, cities = cities, input = Model.Input })"><i class="ti-view-list-alt"></i></a></li>
                            </ul>

                        </div>

                    </div>



                </div>
                @await Component.InvokeAsync("ThisPlacesList", new {cities = Model.Cities, input = Model.Input, categories = Model.Categories, currentPage = Model.CurrentPage, listType = Model.ListType, orderBy = Model.OrderBy, isDescending = Model.IsDescending})
            </div>
        </div>

    </div>
</div>
<!-- end Main Wrapper -->